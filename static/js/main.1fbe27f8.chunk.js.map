{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","onAdd","useState","movieTitle","setMovieTitle","setMovie","loader","setLoader","hasError","setHasError","handleChangeMovieTitle","useCallback","ev","target","value","search","a","toLowerCase","trim","movieData","imgUrlNormalized","Poster","newMovie","Title","Plot","imdbID","handleSubmit","preventDefault","findMovie","handleAdd","onSubmit","htmlFor","type","id","placeholder","onChange","disabled","classNames","onClick","App","setMovies","handleAddMovie","some","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1fbe27f8.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=79b61fc4';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard/MovieCard';\nimport './FindMovie.scss';\n\nexport type Props = {\n  onAdd(movie: Movie): void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [movieTitle, setMovieTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>();\n  const [loader, setLoader] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const handleChangeMovieTitle = useCallback(\n    (ev: React.ChangeEvent<HTMLInputElement>) => {\n      setMovieTitle(ev.target.value);\n      setHasError(false);\n    }, [],\n  );\n\n  async function findMovie(search: string) {\n    setLoader(true);\n\n    const movieData = await getMovie(search.toLowerCase().trim());\n\n    setLoader(false);\n\n    if ('Error' in movieData) {\n      setHasError(true);\n    } else {\n      const imgUrlNormalized = (movieData.Poster === 'N/A')\n        ? ('https://via.placeholder.com/360x270.png?text=no%20preview')\n        : (movieData.Poster);\n\n      const newMovie: Movie = {\n        title: movieData.Title,\n        description: movieData.Plot,\n        imgUrl: imgUrlNormalized,\n        imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n        imdbId: movieData.imdbID,\n      };\n\n      setMovie(newMovie);\n\n      setHasError(false);\n    }\n  }\n\n  const handleSubmit = (ev: React.FormEvent<HTMLFormElement>) => {\n    ev.preventDefault();\n\n    findMovie(movieTitle);\n  };\n\n  const handleAdd = useCallback(() => {\n    if (movie) {\n      onAdd(movie);\n      setMovieTitle('');\n      setMovie(null);\n      setHasError(false);\n    }\n  }, [movie]);\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={(ev) => handleSubmit(ev)}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={movieTitle}\n              onChange={handleChangeMovieTitle}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={!movieTitle}\n              className={\n                classNames('button is-light', { 'is-loading finally': loader })\n              }\n            >\n              {!movieTitle ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAdd}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = useCallback((newMovie: Movie) => {\n    const movieAlreadyExist = movies\n      .some(movie => movie.imdbId === newMovie.imdbId);\n\n    if (!movieAlreadyExist) {\n      setMovies(prevMovies => [...prevMovies, newMovie]);\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {movies && <MoviesList movies={movies} />}\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAdd={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}